{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/step.service\";\nimport * as i3 from \"oarng\";\nimport * as i4 from \"@angular/common\";\n\nfunction SoftwareinfoComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13);\n    i0.ɵɵtext(2, \"Type in software link: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 14);\n    i0.ɵɵlistener(\"input\", function SoftwareinfoComponent_div_14_Template_input_input_3_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.updateSoftwareLink($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let SoftwareinfoComponent = /*#__PURE__*/(() => {\n  class SoftwareinfoComponent {\n    constructor(rootFormGroup, chref, stepService) {\n      this.rootFormGroup = rootFormGroup;\n      this.chref = chref;\n      this.stepService = stepService;\n      this._sbarvisible = true;\n      this.steps = [];\n    }\n\n    ngOnInit() {\n      this.parantFormGroup = this.rootFormGroup.control.controls['softwareInfo'];\n    }\n\n    ngAfterContentInit() {\n      this.chref.detectChanges();\n    }\n    /**\n     * cancel this wizard\n     */\n\n\n    cancel() {\n      console.log(\"Canceling wizard input\");\n    }\n    /**\n     * close out the collection of information and dispatch it as necessary\n     */\n\n\n    finish() {\n      console.log(\"Done!\");\n    }\n\n    toggleSbarView() {\n      this._sbarvisible = !this._sbarvisible;\n      this.chref.detectChanges();\n    }\n\n    isSbarVisible() {\n      return this._sbarvisible;\n    }\n\n    toggleSoftwareLink(evt) {\n      var target = evt.target;\n      this.dataModel.provideLink = target.value === 'yes';\n\n      if (!this.dataModel.provideLink) {\n        this.dataModel.softwareLink = undefined;\n        this.parantFormGroup.patchValue({\n          softwareLink: \"\"\n        });\n        this.steps[3].isComplete = true;\n      } else {\n        this.steps[3].isComplete = false;\n      }\n\n      this.steps[4].canGoNext = this.stepService.allDone();\n    }\n\n    updateSoftwareLink(evt) {\n      var _a;\n\n      this.dataModel.softwareLink = evt.target.value;\n      this.steps[3].isComplete = ((_a = this.dataModel.softwareLink) === null || _a === void 0 ? void 0 : _a.trim()) != \"\";\n      this.steps[4].canGoNext = this.stepService.allDone();\n    }\n\n  }\n\n  SoftwareinfoComponent.ɵfac = function SoftwareinfoComponent_Factory(t) {\n    return new (t || SoftwareinfoComponent)(i0.ɵɵdirectiveInject(i1.FormGroupDirective), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.StepService));\n  };\n\n  SoftwareinfoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SoftwareinfoComponent,\n    selectors: [[\"app-softwareinfo\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      steps: \"steps\"\n    },\n    decls: 26,\n    vars: 2,\n    consts: [[1, \"full-height\", 3, \"formGroup\"], [2, \"width\", \"100%\", \"height\", \"fit-content\"], [1, \"main-content\"], [1, \"radio-group\"], [1, \"radio\"], [\"title\", \"downloadable files or a searchable database\"], [\"type\", \"radio\", \"required\", \"\", \"name\", \"provideLink\", \"value\", \"yes\", \"formControlName\", \"provideLink\", 3, \"change\"], [\"title\", \"source code or a downloadable application one may install and run\"], [\"type\", \"radio\", \"required\", \"\", \"name\", \"provideLink\", \"value\", \"no\", \"formControlName\", \"provideLink\", 3, \"change\"], [\"style\", \"margin-top: 1em;\", 4, \"ngIf\"], [1, \"sidebar-title\"], [1, \"sidebar-content\"], [2, \"margin-top\", \"1em\"], [2, \"margin-bottom\", \".5em\"], [\"type\", \"text\", \"pInputText\", \"\", \"name\", \"softwareLink\", \"formControlName\", \"softwareLink\", 3, \"input\"]],\n    template: function SoftwareinfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"oar-pushing-sidebar\", 1)(2, \"div\", 2)(3, \"p\");\n        i0.ɵɵtext(4, \"Would you like to provide a link to a public software repository (e.g. in GitHub)?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"label\", 5)(8, \"input\", 6);\n        i0.ɵɵlistener(\"change\", function SoftwareinfoComponent_Template_input_change_8_listener($event) {\n          return ctx.toggleSoftwareLink($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9, \" Yes \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 7)(12, \"input\", 8);\n        i0.ɵɵlistener(\"change\", function SoftwareinfoComponent_Template_input_change_12_listener($event) {\n          return ctx.toggleSoftwareLink($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \" No \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(14, SoftwareinfoComponent_div_14_Template, 4, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"span\", 10);\n        i0.ɵɵtext(16, \"Question Help\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 11)(18, \"p\");\n        i0.ɵɵtext(19, \" With this question, you are telling us the \");\n        i0.ɵɵelementStart(20, \"i\");\n        i0.ɵɵtext(21, \"type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(22, \" of product you are publishing. Your publication may present multiple types of products--for example, data plus software to analyze it--but, it is helpful for us to know what you consider is the most important product. And don't worry: you can change this later. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"p\")(24, \"i\");\n        i0.ɵɵtext(25, \"[Helpful examples, links to policy and guideance]\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.parantFormGroup);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataModel.provideLink);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.PushingSidebarComponent, i1.RadioControlValueAccessor, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.FormControlName, i4.NgIf],\n    styles: [\"\", \".wiz-page-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;width:100%;margin:auto}.step-page-container[_ngcontent-%COMP%]{flex:1;margin:20px auto;width:80%}.form-step[_ngcontent-%COMP%]{height:100%}.form-nav-btn[_ngcontent-%COMP%]{background-color:var(--nist-blue-default);color:#fff;margin:20px 0 0 20px;width:100px;height:40px;float:right;border-radius:5px;border:none}.form-nav-btn[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed!important}.form-cancel-btn[_ngcontent-%COMP%]{background-color:var(--nist-blue-default);color:#fff;margin:20px 0 0 20px;width:100px;height:40px;float:left;border-radius:5px;border:none}.bottom-control-container[_ngcontent-%COMP%]{width:100%;height:80px;background-color:var(--background-light-grey)}.bottom-btn-container[_ngcontent-%COMP%]{margin:auto;width:80%}.main-content[_ngcontent-%COMP%]{max-width:100%;height:100%;margin:auto}.step-page[_ngcontent-%COMP%], .full-height[_ngcontent-%COMP%]{height:100%}\"]\n  });\n  return SoftwareinfoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}