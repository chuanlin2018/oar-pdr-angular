{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/step.service\";\nimport * as i3 from \"oarng\";\nimport * as i4 from \"@angular/common\";\n\nfunction ContactinfoComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13);\n    i0.ɵɵtext(2, \"Type in contact's name and select the appropriate match: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 14);\n    i0.ɵɵlistener(\"input\", function ContactinfoComponent_div_14_Template_input_input_3_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.updateContactName($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let ContactinfoComponent = /*#__PURE__*/(() => {\n  class ContactinfoComponent {\n    constructor(rootFormGroup, cdr, stepService) {\n      this.rootFormGroup = rootFormGroup;\n      this.cdr = cdr;\n      this.stepService = stepService;\n      this._sbarvisible = true;\n      this.steps = [];\n    }\n\n    ngOnInit() {\n      this.parantFormGroup = this.rootFormGroup.control.controls['contactInfo'];\n      this.parantFormGroup.valueChanges.subscribe(selectedValue => {});\n    }\n    /**\n     * cancel this wizard\n     */\n\n\n    cancel() {\n      console.log(\"Canceling wizard input\");\n    }\n\n    ngAfterViewInit() {\n      this.cdr.detectChanges();\n    }\n\n    ngAfterContentInit() {\n      this.cdr.detectChanges();\n    }\n    /**\n     * close out the collection of information and dispatch it as necessary\n     */\n\n\n    finish() {\n      console.log(\"Done!\");\n    }\n\n    toggleSbarView() {\n      this._sbarvisible = !this._sbarvisible;\n      this.cdr.detectChanges();\n    }\n\n    isSbarVisible() {\n      return this._sbarvisible;\n    }\n\n    toggleContactName(evt) {\n      var target = evt.target;\n      this.dataModel.creatorIsContact = target.value === 'true';\n\n      if (this.dataModel.creatorIsContact) {\n        this.dataModel.contactName = undefined;\n        this.parantFormGroup.patchValue({\n          contactName: \"\"\n        });\n        this.steps[1].isComplete = true;\n      } else {\n        this.steps[1].isComplete = false;\n      }\n\n      this.steps[4].canGoNext = this.stepService.allDone();\n    }\n\n    updateContactName(evt) {\n      var _a;\n\n      this.dataModel.contactName = evt.target.value;\n      this.steps[1].isComplete = ((_a = this.dataModel.contactName) === null || _a === void 0 ? void 0 : _a.trim()) != \"\";\n      this.steps[4].canGoNext = this.stepService.allDone();\n    }\n\n  }\n\n  ContactinfoComponent.ɵfac = function ContactinfoComponent_Factory(t) {\n    return new (t || ContactinfoComponent)(i0.ɵɵdirectiveInject(i1.FormGroupDirective), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.StepService));\n  };\n\n  ContactinfoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactinfoComponent,\n    selectors: [[\"app-contactinfo\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      steps: \"steps\"\n    },\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"full-height\", 3, \"formGroup\"], [2, \"width\", \"100%\", \"height\", \"fit-content\"], [1, \"main-content\"], [1, \"radio-group\"], [1, \"radio\"], [\"title\", \"Yes, I will be the primary public contact.\"], [\"type\", \"radio\", \"required\", \"\", \"name\", \"creatorIsContact\", \"value\", \"true\", \"formControlName\", \"creatorIsContact\", 3, \"change\"], [\"title\", \"No, another NIST staff person will be the primary public contact.\"], [\"type\", \"radio\", \"required\", \"\", \"name\", \"creatorIsContact\", \"value\", \"false\", \"formControlName\", \"creatorIsContact\", 3, \"change\"], [\"style\", \"margin-top: 1em;\", 4, \"ngIf\"], [1, \"sidebar-title\"], [1, \"sidebar-content\"], [2, \"margin-top\", \"1em\"], [2, \"margin-bottom\", \".5em\"], [\"type\", \"text\", \"pInputText\", \"\", \"name\", \"otherContact\", \"formControlName\", \"contactName\", 3, \"input\"]],\n    template: function ContactinfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"oar-pushing-sidebar\", 1)(2, \"div\", 2)(3, \"p\");\n        i0.ɵɵtext(4, \"Should you be the primary public contact for this record?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"label\", 5)(8, \"input\", 6);\n        i0.ɵɵlistener(\"change\", function ContactinfoComponent_Template_input_change_8_listener($event) {\n          return ctx.toggleContactName($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9, \" Yes \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 7)(12, \"input\", 8);\n        i0.ɵɵlistener(\"change\", function ContactinfoComponent_Template_input_change_12_listener($event) {\n          return ctx.toggleContactName($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \" No \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(14, ContactinfoComponent_div_14_Template, 4, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"span\", 10);\n        i0.ɵɵtext(16, \"Question Help\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 11);\n        i0.ɵɵtext(18, \" The primary public contact is a person familiar the content of this publication and, thus, can answer questions from the public that wish to reference this publication or make use of its contents. \");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.parantFormGroup);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataModel.creatorIsContact != undefined && !ctx.dataModel.creatorIsContact);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.PushingSidebarComponent, i1.RadioControlValueAccessor, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.FormControlName, i4.NgIf],\n    styles: [\"\", \".wiz-page-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;width:100%;margin:auto}.step-page-container[_ngcontent-%COMP%]{flex:1;margin:20px auto;width:80%}.form-step[_ngcontent-%COMP%]{height:100%}.form-nav-btn[_ngcontent-%COMP%]{background-color:var(--nist-blue-default);color:#fff;margin:20px 0 0 20px;width:100px;height:40px;float:right;border-radius:5px;border:none}.form-nav-btn[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed!important}.form-cancel-btn[_ngcontent-%COMP%]{background-color:var(--nist-blue-default);color:#fff;margin:20px 0 0 20px;width:100px;height:40px;float:left;border-radius:5px;border:none}.bottom-control-container[_ngcontent-%COMP%]{width:100%;height:80px;background-color:var(--background-light-grey)}.bottom-btn-container[_ngcontent-%COMP%]{margin:auto;width:80%}.main-content[_ngcontent-%COMP%]{max-width:100%;height:100%;margin:auto}.step-page[_ngcontent-%COMP%], .full-height[_ngcontent-%COMP%]{height:100%}\"]\n  });\n  return ContactinfoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}