{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/step.service\";\nimport * as i3 from \"oarng\";\nexport let FilesComponent = /*#__PURE__*/(() => {\n  class FilesComponent {\n    constructor(rootFormGroup, chref, stepService) {\n      this.rootFormGroup = rootFormGroup;\n      this.chref = chref;\n      this.stepService = stepService;\n      this._sbarvisible = true;\n      this.steps = [];\n    }\n\n    ngOnInit() {\n      this.parantFormGroup = this.rootFormGroup.control.controls['files'];\n      this.parantFormGroup.valueChanges.subscribe(selectedValue => {\n        this.dataModel.willUpload = selectedValue.willUpload;\n\n        if (this.dataModel.willUpload != undefined) {\n          this.steps[2].canGoNext = true;\n          this.steps[2].isComplete = true;\n        } else {\n          this.dataModel.willUpload = undefined;\n          this.steps[2].isComplete = false;\n        }\n\n        this.steps[4].canGoNext = this.stepService.allDone();\n      });\n    }\n    /**\n     * close out the collection of information and dispatch it as necessary\n     */\n\n\n    finish() {\n      console.log(\"Done!\");\n    }\n\n    toggleSbarView() {\n      this._sbarvisible = !this._sbarvisible;\n      this.chref.detectChanges();\n    }\n\n    isSbarVisible() {\n      return this._sbarvisible;\n    }\n\n  }\n\n  FilesComponent.ɵfac = function FilesComponent_Factory(t) {\n    return new (t || FilesComponent)(i0.ɵɵdirectiveInject(i1.FormGroupDirective), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.StepService));\n  };\n\n  FilesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FilesComponent,\n    selectors: [[\"app-files\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      steps: \"steps\"\n    },\n    decls: 18,\n    vars: 1,\n    consts: [[1, \"full-height\", 3, \"formGroup\"], [2, \"width\", \"100%\", \"height\", \"fit-content\"], [1, \"main-content\"], [1, \"radio-group\"], [1, \"radio\"], [\"title\", \"Yes, I will be the primary public contact.\"], [\"type\", \"radio\", \"required\", \"\", \"name\", \"willUpload\", \"value\", \"true\", \"formControlName\", \"willUpload\"], [\"title\", \"No, another NIST staff person will be the primary public contact.\"], [\"type\", \"radio\", \"required\", \"\", \"name\", \"willUpload\", \"value\", \"false\", \"formControlName\", \"willUpload\"], [1, \"sidebar-title\"], [1, \"sidebar-content\"]],\n    template: function FilesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"oar-pushing-sidebar\", 1)(2, \"div\", 2)(3, \"p\");\n        i0.ɵɵtext(4, \"Will you be uploading any files to be included with this publication?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵtext(9, \" Yes \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 7);\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵtext(13, \" No \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(14, \"span\", 9);\n        i0.ɵɵtext(15, \"Question Help\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 10);\n        i0.ɵɵtext(17, \" The primary public contact is a person familiar the content of this publication and, thus, can answer questions from the public that wish to reference this publication or make use of its contents. \");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.parantFormGroup);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.PushingSidebarComponent, i1.RadioControlValueAccessor, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\", \".wiz-page-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;width:100%;margin:auto}.step-page-container[_ngcontent-%COMP%]{flex:1;margin:20px auto;width:80%}.form-step[_ngcontent-%COMP%]{height:100%}.form-nav-btn[_ngcontent-%COMP%]{background-color:var(--nist-blue-default);color:#fff;margin:20px 0 0 20px;width:100px;height:40px;float:right;border-radius:5px;border:none}.form-nav-btn[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed!important}.form-cancel-btn[_ngcontent-%COMP%]{background-color:var(--nist-blue-default);color:#fff;margin:20px 0 0 20px;width:100px;height:40px;float:left;border-radius:5px;border:none}.bottom-control-container[_ngcontent-%COMP%]{width:100%;height:80px;background-color:var(--background-light-grey)}.bottom-btn-container[_ngcontent-%COMP%]{margin:auto;width:80%}.main-content[_ngcontent-%COMP%]{max-width:100%;height:100%;margin:auto}.step-page[_ngcontent-%COMP%], .full-height[_ngcontent-%COMP%]{height:100%}\"]\n  });\n  return FilesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}